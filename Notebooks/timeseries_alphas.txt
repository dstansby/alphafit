
%matplotlib inline
import sys
sys.path.append('../fitting')
sys.path.append('../visualising')
from datetime import datetime, timedelta

import matplotlib.pyplot as plt
import matplotlib.colors as mcolor
import pandas as pd
import numpy as np
from plasmapy.physics import dimensionless
import astropy.units as u
import astropy.constants as const

from heliopy.data import helios

import vis_helpers as helpers
from helpers import mplhelp
from helpers import helioshelp
from plot_fitted_dist_alphas import plot_dist_time

# Set probe and dates to compare here
probe = '2'
starttime = datetime(1976, 4, 13)
endtime = starttime + timedelta(days=10)

merged = helios.merged(probe, starttime, endtime)
alphas = helpers.load_alphafit(probe, starttime, endtime)
protons = helios.corefit(probe, starttime, endtime, try_download=False)

protons = helioshelp.calculate_derived(protons)

alphas[['Bx', 'By', 'Bz', '|B|']] = protons[['Bx', 'By', 'Bz', '|B|']]
alphas['Beta_par'] = alphas['Ta_par'] * const.k_B.value * alphas['n_a'] * 1e6 / (alphas['|B|']**2 * 1e-18 / (2 * const.mu0))
alphas['Tani'] = alphas['Ta_perp'] / alphas['Ta_par']

merged.keys()

fig, ax = plt.subplots()
ax.plot(alphas['Ta_par'] / 2)
ax.plot(alphas['Ta_perp'] / 2)
ax.plot(merged['Tal'])
ax.plot(protons['Tp_par'])

ax.set_yscale('log')
ax.set_ylim(1e5, 1e8)
ax.set_xlim(starttime + timedelta(days=3), starttime + timedelta(days=4))
